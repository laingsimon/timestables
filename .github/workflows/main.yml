# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
      - 'feature/**'

  pull_request:
    branches:
      - 'feature/**'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Normalise git variables
        shell: bash
        run: |
          echo "branch_name=$(echo "$GITHUB_REF_NAME" | sed -r 's/\//_/g')" >> $GITHUB_ENV

      - name: Resolve git variables
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "commit_date=$(git show --no-patch --no-notes --pretty='%cd' "$GITHUB_SHA")" >> $GITHUB_ENV
          echo "deploy_dir=\$web/${{ env.branch_name }}" >> $GITHUB_ENV
          echo "purge_dir=/${{ env.branch_name }}/*" >> $GITHUB_ENV

      - name: Replace git variables
        shell: bash
        run: |
          sed -i 's/{commitId}/${{ env.sha_short }}/g' index.html
          sed -i 's/{commitTime}/${{ env.commit_date }}/g' index.html
          sed -i 's/{branchName}/${{ env.branch_name }}/g' index.html

      - name: Upload html to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name "timestablesapp" --auth-mode key -d '$deploy_dir' -s . --pattern *.html
      - name: Upload js to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name "timestablesapp" --auth-mode key -d '$deploy_dir' -s . --pattern "*.js"
      - name: Upload css to blob storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name "timestablesapp" --auth-mode key -d '$deploy_dir' -s . --pattern "*.css"

      - name: Purge Azure CDN
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az cdn endpoint purge --content-paths "purge_dir" --profile-name "TimestablesappCDN" --name "timestablesapp" --resource-group "Default-Storage-WestEurope"
      - name: logout
        run: |
          az logout
        if: always()

